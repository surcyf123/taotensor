import { Layout, Menu, theme } from "antd";
import "antd/dist/reset.css";
import React, { useState } from "react";
const { Header, Content, Footer, Sider } = Layout;

import { config } from "@fortawesome/fontawesome-svg-core";
import "@fortawesome/fontawesome-svg-core/styles.css";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";

import {
  faHome,
  faRandom,
  faShareNodes,
} from "@fortawesome/free-solid-svg-icons";
import { useRouter } from "next/router";

import { faAddressCard } from "@fortawesome/free-regular-svg-icons";
import { Typography } from "antd";
import Link from "next/link";
import { site_name } from "../constants";
import Navbar from "./Navbar";

const { Title } = Typography;

config.autoAddCss = false;

// const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const items = [
  {
    icon: <FontAwesomeIcon className="mr-2" icon={faHome} />,
    label: <Link href="/">Home</Link>,
    key: "",
  },
  {
    icon: <FontAwesomeIcon className="mr-2" icon={faShareNodes} />,
    label: <Link href="/metagraph">Metagraph</Link>,
    key: "metagraph",
  },
  {
    icon: <FontAwesomeIcon className="mr-2" icon={faAddressCard} />,
    label: <Link href="/registrations">Registrations</Link>,
    key: "registrations",
  },
  {
    icon: <FontAwesomeIcon className="mr-2" icon={faRandom} />,
    label: <Link href="/hyper-parameters">Hyper Parameters</Link>,
    key: "hyper-parameters",
  },
  {
    icon: <FontAwesomeIcon className="mr-2" icon={faRandom} />,
    label: <Link href="/playground">Playground</Link>,
    key: "playground",
  },
];

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // fetch from api https://api.mexc.com/api/v3/ticker/price?symbol=TAOUSD
  // const { data: currentPrice, isLoading } = useQuery(
  //   ["price"],
  //   async () => {
  //     const response = await fetch(
  //       "https://api.mexc.com/api/v3/ticker/price?symbol=TAOUSDT",
  //       {
  //         mode: "no-cors",
  //       }
  //     );
  //     const data = await response.json();
  //     return data;
  //   },
  //   {
  //     refetchInterval: 5000,
  //   }
  // );

  // router
  const router = useRouter();
  const {
    token: { colorBgContainer },
  } = theme.useToken();
  const [collapsed, setCollapsed] = useState(false);

  return (
    <Layout hasSider>
      <Sider
        trigger={null}
        collapsible
        collapsed={collapsed}
        style={{
          minHeight: "100vh",
          height: "100%",
          position: "fixed",
        }}
      >
        <div
          className="text-center mt-2"
          style={{ textAlign: "center", marginTop: ".25rem" }}
        >
          {collapsed ? (
            <Title style={{ color: "white" }}>ττ</Title>
          ) : (
            <Title style={{ color: "white" }}>{site_name}</Title>
          )}
        </div>
        <Menu
          theme="dark"
          mode="inline"
          defaultSelectedKeys={router.pathname.split("/").slice(-1)}
          items={items}
        />
      </Sider>
      <Layout
        className="site-layout"
        style={{ marginLeft: collapsed ? 80 : 200 }}
      >
        <Navbar siderCollapsed={collapsed} setCollapsed={setCollapsed}></Navbar>
        <Content
          style={{
            margin: "24px 16px 0",
            overflow: "initial",
          }}
        >
          <div>{children}</div>
        </Content>
        <Footer style={{ textAlign: "center" }}>
          {" "}
          &copy; {new Date().getFullYear()} {site_name}
        </Footer>
      </Layout>
    </Layout>
  );
}
